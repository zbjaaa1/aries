# Forked from Alpine to add systemd-service support
# HACK: pma#3452: this is now in temp/abuild AND extra-repos/systemd/abuild for
# initial systemd bringup. Until this is resolved, make changes to both
# APKBUILDs at once.

pkgname=abuild
pkgver=99993.15.0_rc2
_pkgver=3.15.0_rc2
_commit="2b8b0741fb9b5605573d2efcd80fdef9492bb21f"
pkgrel=0
pkgdesc="Script to build Alpine Packages"
url="https://git.alpinelinux.org/cgit/abuild/"
arch="all"
license="GPL-2.0-only"
depends="fakeroot scanelf openssl>3 apk-tools>=2.0.7-r1 libc-utils
	attr tar pkgconf patch lzip curl libcap-getcap"
makedepends="openssl-dev>3 zlib-dev pkgconfig scdoc"
checkdepends="kyua git"
install="$pkgname.pre-install $pkgname.pre-upgrade"
subpackages="
	apkbuild-cpan:cpan:noarch
	apkbuild-gem-resolver:gems:noarch
	apkbuild-pypi:pypi:noarch
	abuild-rootbld:_rootbld:noarch
	$pkgname-doc
	"
options="suid !check" # tests are SLOW in qemu
pkggroups="abuild"
source="
	https://gitlab.alpinelinux.org/postmarketOS/abuild/-/archive/$_commit/abuild-$_commit.tar.gz
	"
builddir="$srcdir/$pkgname-$_commit"

build() {
	make VERSION="$_pkgver-r$pkgrel"
}

check() {
	make check
}

package() {
	make install VERSION="$_pkgver-r$pkgrel" DESTDIR="$pkgdir"

	install -m 644 abuild.conf "$pkgdir"/etc/abuild.conf

	case "$CARCH" in
	x86*|ppc64le)
		# binutils only supports it here
		cat >>"$pkgdir"/usr/share/abuild/default.conf <<-EOF

		# binutils ld.bfd supports this on this architecture; default to it
		export RUSTFLAGS="\$RUSTFLAGS -Clink-arg=-Wl,-z,pack-relative-relocs"
		export LDFLAGS="\$LDFLAGS -Wl,-z,pack-relative-relocs"
		EOF
	esac

	case "$CARCH" in
	x86_64)
		# https://lists.alpinelinux.org/~alpine/devel/%3C1628515011.zujvcn248v.none%40localhost%3E
		# note that this is x86-exclusive. on other architectures, this is pretty much always bad
		# https://github.com/rust-lang/rust/pull/106380
		cat >>"$pkgdir"/usr/share/abuild/default.conf <<-EOF

		# -fno-plt has very slight improvements to general code size and speed on x86-only,
		# for the common system dynamic linking case
		export CFLAGS="\$CFLAGS -fno-plt"
		export CXXFLAGS="\$CXXFLAGS -fno-plt"
		EOF
		;;
	esac

	install -d -m 775 -g abuild "$pkgdir"/var/cache/distfiles
}

cpan() {
	pkgdesc="Script to generate perl APKBUILD from CPAN"
	depends="perl perl-libwww perl-json perl-module-build perl-module-build-tiny
		perl-lwp-protocol-https"

	amove usr/bin/apkbuild-cpan
}

gems() {
	pkgdesc="APKBUILD dependency resolver for RubyGems"
	depends="ruby ruby-augeas"

	amove usr/bin/apkbuild-gem-resolver
}

pypi() {
	pkgdesc="Script to generate python3 APKBUILD from PYPI"
	depends="perl perl-libwww perl-json perl-module-build-tiny perl-lwp-protocol-https
	perl-ipc-system-simple"

	amove usr/bin/apkbuild-pypi
}

_rootbld() {
	pkgdesc="Build packages in chroot"
	depends="abuild bubblewrap cmd:envsubst git"
	mkdir -p "$subpkgdir"
}

sha512sums="
8ed605e07a55aa6d63db929afefd6717bc602517f57b5d9e1b6a48b2771ff4d6b9d8b7f381ee785f629f3cc71c38c009e3d2ea2dc5e80add7f6f5bccbe85e542  abuild-2b8b0741fb9b5605573d2efcd80fdef9492bb21f.tar.gz
"
